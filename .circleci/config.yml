version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@8
  aws-cli: circleci/aws-cli@4.0.0
  service-adapter:
    commands:
      aws_cli_install:
        steps:
          - run:
              name: Install aws cli
              command: |
                sudo apt-get update
                sudo apt-get -y install awscli
                aws --version

parameters:
  alerts-slack-channel:
    type: string
    default: hmpps-integration-api-alerts
  releases-slack-channel:
    type: string
    default: hmpps-integration-api-alerts

    parameters:
      resource_class:
        default: medium
        type: string
      jdk_tag:
        type: string
      localstack_tag:
        type: string
      localstack_type:
        default: "localstack"
        type: string
      services:
        default: "sqs,sns"
        type: string
      postgres_tag:
        type: string
      postgres_password:
        default: "dev"
        type: string
      postgres_username:
        default: "root"
        type: string
      postgres_port:
        default: 5432
        type: integer
      java_options:
        default: -Xmx512m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process -Dorg.gradle.workers.max=1
        type: string

jobs:
  validate:
#    executor:
#      name: hmpps/java_localstack_postgres_with_db_name
#      jdk_tag: "21.0"
#      localstack_tag: "3"
#      services: "sqs,sns,s3,secretsmanager"
#      postgres_tag: "15"
##      postgres_db: << pipeline.parameters.postgres_name >>
##      postgres_username: << pipeline.parameters.postgres_user >>
##      postgres_password: << pipeline.parameters.postgres_password >>
#      resource_class: medium+
#    environment:
#      POSTGRES_NAME: "$DB_NAME"
#      POSTGRES_USER: "$DB_USER"
#      POSTGRES_PASSWORD: "$DB_PASSW"
    docker:
      - image: cimg/openjdk:21.0
      - image: localstack/localstack:3
        environment:
          - SERVICES="sqs,sns,s3,secretsmanager"
          - ES_PORT_EXTERNAL=4571
          - DEBUG=${DEBUG- }
          - DOCKER_HOST=unix:///var/run/docker.sock
          - AWS_EXECUTION_ENV=True
          - PERSISTENCE=1
      - image: postgres:15
        environment:
          - POSTGRES_DB=${DB_NAME}
          - POSTGRES_USER=${DB_USER}
          - POSTGRES_PASSWORD=${DB_PASS}
          - PGPORT=5432
    environment:
      _JAVA_OPTIONS: -Xmx512m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process -Dorg.gradle.workers.max=1
    working_directory: ~/app
    resource_class: medium+
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - hmpps/wait_till_ready_postgres
      - service-adapter/aws_cli_install
      - run:
          name: setup local stack
          command:
            sh ./scripts/localstack/setup.sh
      - run:
          name: run gradlew check
          command:
            ./gradlew check
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - validate:
          filters:
            tags:
              ignore: /.*/
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_multiplatform_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          jira_update: true
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - validate
            - build_docker
            - helm_lint
          helm_timeout: 5m
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          jira_update: true
          jira_env_type: staging
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          context:
            - hmpps-common-vars
            - hmpps-integration-events-preprod
          requires:
            - request-preprod-approval
          helm_timeout: 5m
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          jira_update: true
          jira_env_type: production
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - hmpps-integration-events-prod
          requires:
            - request-prod-approval
          helm_timeout: 5m

  security:
    triggers:
      - schedule:
          cron: "15 7 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/gradle_owasp_dependency_check:
          cache_key: "v2_0"
          jdk_tag: "21.0"
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "0 5 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars


